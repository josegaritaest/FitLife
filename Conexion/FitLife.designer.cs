#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Conexion
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FitLife")]
	public partial class FitLifeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertAttendance(Attendance instance);
    partial void UpdateAttendance(Attendance instance);
    partial void DeleteAttendance(Attendance instance);
    partial void InsertBodyMetric(BodyMetric instance);
    partial void UpdateBodyMetric(BodyMetric instance);
    partial void DeleteBodyMetric(BodyMetric instance);
    partial void InsertDifficultyLevel(DifficultyLevel instance);
    partial void UpdateDifficultyLevel(DifficultyLevel instance);
    partial void DeleteDifficultyLevel(DifficultyLevel instance);
    partial void InsertExerciseCategory(ExerciseCategory instance);
    partial void UpdateExerciseCategory(ExerciseCategory instance);
    partial void DeleteExerciseCategory(ExerciseCategory instance);
    partial void InsertExercise(Exercise instance);
    partial void UpdateExercise(Exercise instance);
    partial void DeleteExercise(Exercise instance);
    partial void InsertGoalType(GoalType instance);
    partial void UpdateGoalType(GoalType instance);
    partial void DeleteGoalType(GoalType instance);
    partial void InsertMembershipType(MembershipType instance);
    partial void UpdateMembershipType(MembershipType instance);
    partial void DeleteMembershipType(MembershipType instance);
    partial void InsertNotification(Notification instance);
    partial void UpdateNotification(Notification instance);
    partial void DeleteNotification(Notification instance);
    partial void InsertNotificationType(NotificationType instance);
    partial void UpdateNotificationType(NotificationType instance);
    partial void DeleteNotificationType(NotificationType instance);
    partial void InsertPaymentMethod(PaymentMethod instance);
    partial void UpdatePaymentMethod(PaymentMethod instance);
    partial void DeletePaymentMethod(PaymentMethod instance);
    partial void InsertPayment(Payment instance);
    partial void UpdatePayment(Payment instance);
    partial void DeletePayment(Payment instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertRoutineDay(RoutineDay instance);
    partial void UpdateRoutineDay(RoutineDay instance);
    partial void DeleteRoutineDay(RoutineDay instance);
    partial void InsertRoutineExercise(RoutineExercise instance);
    partial void UpdateRoutineExercise(RoutineExercise instance);
    partial void DeleteRoutineExercise(RoutineExercise instance);
    partial void InsertRoutineRating(RoutineRating instance);
    partial void UpdateRoutineRating(RoutineRating instance);
    partial void DeleteRoutineRating(RoutineRating instance);
    partial void InsertRoutine(Routine instance);
    partial void UpdateRoutine(Routine instance);
    partial void DeleteRoutine(Routine instance);
    partial void InsertScheduledMetricMeasurement(ScheduledMetricMeasurement instance);
    partial void UpdateScheduledMetricMeasurement(ScheduledMetricMeasurement instance);
    partial void DeleteScheduledMetricMeasurement(ScheduledMetricMeasurement instance);
    partial void InsertSession(Session instance);
    partial void UpdateSession(Session instance);
    partial void DeleteSession(Session instance);
    partial void InsertUserAssignedRoutine(UserAssignedRoutine instance);
    partial void UpdateUserAssignedRoutine(UserAssignedRoutine instance);
    partial void DeleteUserAssignedRoutine(UserAssignedRoutine instance);
    partial void InsertUserExerciseProgress(UserExerciseProgress instance);
    partial void UpdateUserExerciseProgress(UserExerciseProgress instance);
    partial void DeleteUserExerciseProgress(UserExerciseProgress instance);
    partial void InsertUserGoal(UserGoal instance);
    partial void UpdateUserGoal(UserGoal instance);
    partial void DeleteUserGoal(UserGoal instance);
    partial void InsertUserMembership(UserMembership instance);
    partial void UpdateUserMembership(UserMembership instance);
    partial void DeleteUserMembership(UserMembership instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public FitLifeDataContext() : 
				base(global::Conexion.Properties.Settings.Default.FitLifeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FitLifeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FitLifeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FitLifeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FitLifeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Attendance> Attendances
		{
			get
			{
				return this.GetTable<Attendance>();
			}
		}
		
		public System.Data.Linq.Table<BodyMetric> BodyMetrics
		{
			get
			{
				return this.GetTable<BodyMetric>();
			}
		}
		
		public System.Data.Linq.Table<DifficultyLevel> DifficultyLevels
		{
			get
			{
				return this.GetTable<DifficultyLevel>();
			}
		}
		
		public System.Data.Linq.Table<ExerciseCategory> ExerciseCategories
		{
			get
			{
				return this.GetTable<ExerciseCategory>();
			}
		}
		
		public System.Data.Linq.Table<Exercise> Exercises
		{
			get
			{
				return this.GetTable<Exercise>();
			}
		}
		
		public System.Data.Linq.Table<GoalType> GoalTypes
		{
			get
			{
				return this.GetTable<GoalType>();
			}
		}
		
		public System.Data.Linq.Table<MembershipType> MembershipTypes
		{
			get
			{
				return this.GetTable<MembershipType>();
			}
		}
		
		public System.Data.Linq.Table<Notification> Notifications
		{
			get
			{
				return this.GetTable<Notification>();
			}
		}
		
		public System.Data.Linq.Table<NotificationType> NotificationTypes
		{
			get
			{
				return this.GetTable<NotificationType>();
			}
		}
		
		public System.Data.Linq.Table<PaymentMethod> PaymentMethods
		{
			get
			{
				return this.GetTable<PaymentMethod>();
			}
		}
		
		public System.Data.Linq.Table<Payment> Payments
		{
			get
			{
				return this.GetTable<Payment>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<RoutineDay> RoutineDays
		{
			get
			{
				return this.GetTable<RoutineDay>();
			}
		}
		
		public System.Data.Linq.Table<RoutineExercise> RoutineExercises
		{
			get
			{
				return this.GetTable<RoutineExercise>();
			}
		}
		
		public System.Data.Linq.Table<RoutineRating> RoutineRatings
		{
			get
			{
				return this.GetTable<RoutineRating>();
			}
		}
		
		public System.Data.Linq.Table<Routine> Routines
		{
			get
			{
				return this.GetTable<Routine>();
			}
		}
		
		public System.Data.Linq.Table<ScheduledMetricMeasurement> ScheduledMetricMeasurements
		{
			get
			{
				return this.GetTable<ScheduledMetricMeasurement>();
			}
		}
		
		public System.Data.Linq.Table<Session> Sessions
		{
			get
			{
				return this.GetTable<Session>();
			}
		}
		
		public System.Data.Linq.Table<UserAssignedRoutine> UserAssignedRoutines
		{
			get
			{
				return this.GetTable<UserAssignedRoutine>();
			}
		}
		
		public System.Data.Linq.Table<UserExerciseProgress> UserExerciseProgresses
		{
			get
			{
				return this.GetTable<UserExerciseProgress>();
			}
		}
		
		public System.Data.Linq.Table<UserGoal> UserGoals
		{
			get
			{
				return this.GetTable<UserGoal>();
			}
		}
		
		public System.Data.Linq.Table<UserMembership> UserMemberships
		{
			get
			{
				return this.GetTable<UserMembership>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_RegisterBodyMetrics")]
		public ISingleResult<sp_RegisterBodyMetricsResult> sp_RegisterBodyMetrics([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Weight", DbType="Decimal(5,2)")] System.Nullable<decimal> weight, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Height", DbType="Decimal(5,2)")] System.Nullable<decimal> height, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BodyFatPercentage", DbType="Decimal(5,2)")] System.Nullable<decimal> bodyFatPercentage, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WaistCircumference", DbType="Decimal(5,2)")] System.Nullable<decimal> waistCircumference, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChestCircumference", DbType="Decimal(5,2)")] System.Nullable<decimal> chestCircumference, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ArmCircumference", DbType="Decimal(5,2)")] System.Nullable<decimal> armCircumference, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LegCircumference", DbType="Decimal(5,2)")] System.Nullable<decimal> legCircumference, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Notes", DbType="NVarChar(255)")] string notes)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token, weight, height, bodyFatPercentage, waistCircumference, chestCircumference, armCircumference, legCircumference, notes);
			return ((ISingleResult<sp_RegisterBodyMetricsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_AbandonGoal")]
		public ISingleResult<sp_AbandonGoalResult> sp_AbandonGoal([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GoalTypeName", DbType="NVarChar(100)")] string goalTypeName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token, goalTypeName);
			return ((ISingleResult<sp_AbandonGoalResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_ApprovePayment")]
		public ISingleResult<sp_ApprovePaymentResult> sp_ApprovePayment([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PaymentDate", DbType="DateTime")] System.Nullable<System.DateTime> paymentDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PaymentAmount", DbType="Decimal(10,2)")] System.Nullable<decimal> paymentAmount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserCedula", DbType="NVarChar(20)")] string userCedula)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token, paymentDate, paymentAmount, userCedula);
			return ((ISingleResult<sp_ApprovePaymentResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_ChangePassword")]
		public ISingleResult<sp_ChangePasswordResult> sp_ChangePassword([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrentPasswordHash", DbType="NVarChar(255)")] string currentPasswordHash, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewPasswordHash", DbType="NVarChar(255)")] string newPasswordHash)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token, currentPasswordHash, newPasswordHash);
			return ((ISingleResult<sp_ChangePasswordResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_ChangeUserStatus")]
		public ISingleResult<sp_ChangeUserStatusResult> sp_ChangeUserStatus([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetCedula", DbType="NVarChar(20)")] string targetCedula, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewStatus", DbType="NVarChar(20)")] string newStatus)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token, targetCedula, newStatus);
			return ((ISingleResult<sp_ChangeUserStatusResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_CheckMembershipStatus")]
		public ISingleResult<sp_CheckMembershipStatusResult> sp_CheckMembershipStatus([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token);
			return ((ISingleResult<sp_CheckMembershipStatusResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_CreateUserGoal")]
		public ISingleResult<sp_CreateUserGoalResult> sp_CreateUserGoal([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GoalTypeName", DbType="NVarChar(100)")] string goalTypeName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetValue", DbType="Decimal(10,2)")] System.Nullable<decimal> targetValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetDate", DbType="Date")] System.Nullable<System.DateTime> targetDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token, goalTypeName, targetValue, targetDate);
			return ((ISingleResult<sp_CreateUserGoalResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetActiveMembership")]
		public ISingleResult<sp_GetActiveMembershipResult> sp_GetActiveMembership([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token);
			return ((ISingleResult<sp_GetActiveMembershipResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetActiveRoutines")]
		public ISingleResult<sp_GetActiveRoutinesResult> sp_GetActiveRoutines([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token);
			return ((ISingleResult<sp_GetActiveRoutinesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetAttendanceHistory")]
		public ISingleResult<sp_GetAttendanceHistoryResult> sp_GetAttendanceHistory([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="Date")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="Date")] System.Nullable<System.DateTime> endDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token, startDate, endDate);
			return ((ISingleResult<sp_GetAttendanceHistoryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetAttendanceReport")]
		public ISingleResult<sp_GetAttendanceReportResult> sp_GetAttendanceReport([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="Date")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="Date")] System.Nullable<System.DateTime> endDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserCedula", DbType="NVarChar(20)")] string userCedula)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token, startDate, endDate, userCedula);
			return ((ISingleResult<sp_GetAttendanceReportResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetBodyMetricsHistory")]
		public ISingleResult<sp_GetBodyMetricsHistoryResult> sp_GetBodyMetricsHistory([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="Date")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="Date")] System.Nullable<System.DateTime> endDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token, startDate, endDate);
			return ((ISingleResult<sp_GetBodyMetricsHistoryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetPaymentHistory")]
		public ISingleResult<sp_GetPaymentHistoryResult> sp_GetPaymentHistory([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token);
			return ((ISingleResult<sp_GetPaymentHistoryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetPeakHours")]
		public ISingleResult<sp_GetPeakHoursResult> sp_GetPeakHours([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="Date")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="Date")] System.Nullable<System.DateTime> endDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TopN", DbType="Int")] System.Nullable<int> topN)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token, startDate, endDate, topN);
			return ((ISingleResult<sp_GetPeakHoursResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetRoutineExercises")]
		public ISingleResult<sp_GetRoutineExercisesResult> sp_GetRoutineExercises([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoutineName", DbType="NVarChar(100)")] string routineName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token, routineName);
			return ((ISingleResult<sp_GetRoutineExercisesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetRoutinesReport")]
		public ISingleResult<sp_GetRoutinesReportResult> sp_GetRoutinesReport([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="Date")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="Date")] System.Nullable<System.DateTime> endDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="NVarChar(20)")] string status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoutineName", DbType="NVarChar(100)")] string routineName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token, startDate, endDate, status, routineName);
			return ((ISingleResult<sp_GetRoutinesReportResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetUnreadNotifications")]
		public ISingleResult<sp_GetUnreadNotificationsResult> sp_GetUnreadNotifications([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token);
			return ((ISingleResult<sp_GetUnreadNotificationsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetUserGoals")]
		public ISingleResult<sp_GetUserGoalsResult> sp_GetUserGoals([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="NVarChar(20)")] string status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token, status);
			return ((ISingleResult<sp_GetUserGoalsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetUserProfile")]
		public ISingleResult<sp_GetUserProfileResult> sp_GetUserProfile([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token);
			return ((ISingleResult<sp_GetUserProfileResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetUserProfileByCedula")]
		public ISingleResult<sp_GetUserProfileByCedulaResult> sp_GetUserProfileByCedula([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetCedula", DbType="NVarChar(20)")] string targetCedula)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token, targetCedula);
			return ((ISingleResult<sp_GetUserProfileByCedulaResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_Logout")]
		public ISingleResult<sp_LogoutResult> sp_Logout([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token);
			return ((ISingleResult<sp_LogoutResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_MarkNotificationAsRead")]
		public ISingleResult<sp_MarkNotificationAsReadResult> sp_MarkNotificationAsRead([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NotificationTitle", DbType="NVarChar(100)")] string notificationTitle, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NotificationSentAt", DbType="DateTime")] System.Nullable<System.DateTime> notificationSentAt)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token, notificationTitle, notificationSentAt);
			return ((ISingleResult<sp_MarkNotificationAsReadResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_RateRoutine")]
		public ISingleResult<sp_RateRoutineResult> sp_RateRoutine([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoutineName", DbType="NVarChar(100)")] string routineName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DifficultyRating", DbType="Int")] System.Nullable<int> difficultyRating, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EffectivenessRating", DbType="Int")] System.Nullable<int> effectivenessRating, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EnjoymentRating", DbType="Int")] System.Nullable<int> enjoymentRating, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Comments", DbType="NVarChar(255)")] string comments)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token, routineName, difficultyRating, effectivenessRating, enjoymentRating, comments);
			return ((ISingleResult<sp_RateRoutineResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_RegisterAttendance")]
		public ISingleResult<sp_RegisterAttendanceResult> sp_RegisterAttendance([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token);
			return ((ISingleResult<sp_RegisterAttendanceResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_RegisterBodyMetrics")]
		public ISingleResult<sp_RegisterBodyMetricsResult1> sp_RegisterBodyMetrics1([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Weight", DbType="Decimal(5,2)")] System.Nullable<decimal> weight, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Height", DbType="Decimal(5,2)")] System.Nullable<decimal> height, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BodyFatPercentage", DbType="Decimal(5,2)")] System.Nullable<decimal> bodyFatPercentage, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WaistCircumference", DbType="Decimal(5,2)")] System.Nullable<decimal> waistCircumference, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChestCircumference", DbType="Decimal(5,2)")] System.Nullable<decimal> chestCircumference, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ArmCircumference", DbType="Decimal(5,2)")] System.Nullable<decimal> armCircumference, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LegCircumference", DbType="Decimal(5,2)")] System.Nullable<decimal> legCircumference, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Notes", DbType="NVarChar(255)")] string notes)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token, weight, height, bodyFatPercentage, waistCircumference, chestCircumference, armCircumference, legCircumference, notes);
			return ((ISingleResult<sp_RegisterBodyMetricsResult1>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_RegisterExerciseProgress")]
		public ISingleResult<sp_RegisterExerciseProgressResult> sp_RegisterExerciseProgress([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoutineName", DbType="NVarChar(100)")] string routineName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExerciseName", DbType="NVarChar(100)")] string exerciseName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompletedSets", DbType="Int")] System.Nullable<int> completedSets, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompletedRepetitions", DbType="Int")] System.Nullable<int> completedRepetitions, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Weight", DbType="Decimal(5,2)")] System.Nullable<decimal> weight, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Notes", DbType="NVarChar(255)")] string notes)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token, routineName, exerciseName, completedSets, completedRepetitions, weight, notes);
			return ((ISingleResult<sp_RegisterExerciseProgressResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_RegisterPayment")]
		public ISingleResult<sp_RegisterPaymentResult> sp_RegisterPayment([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MembershipTypeName", DbType="NVarChar(100)")] string membershipTypeName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Amount", DbType="Decimal(10,2)")] System.Nullable<decimal> amount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PaymentMethodName", DbType="NVarChar(50)")] string paymentMethodName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReceiptFilePath", DbType="NVarChar(255)")] string receiptFilePath)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token, membershipTypeName, amount, paymentMethodName, receiptFilePath);
			return ((ISingleResult<sp_RegisterPaymentResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_ScheduleMetricMeasurement")]
		public ISingleResult<sp_ScheduleMetricMeasurementResult> sp_ScheduleMetricMeasurement([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScheduledDate", DbType="Date")] System.Nullable<System.DateTime> scheduledDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token, scheduledDate);
			return ((ISingleResult<sp_ScheduleMetricMeasurementResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_SendNotification")]
		public ISingleResult<sp_SendNotificationResult> sp_SendNotification([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetCedula", DbType="NVarChar(20)")] string targetCedula, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NotificationType", DbType="NVarChar(100)")] string notificationType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Title", DbType="NVarChar(100)")] string title, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Message", DbType="NVarChar(MAX)")] string message)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token, targetCedula, notificationType, title, message);
			return ((ISingleResult<sp_SendNotificationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UpdateGoalProgress")]
		public ISingleResult<sp_UpdateGoalProgressResult> sp_UpdateGoalProgress([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GoalTypeName", DbType="NVarChar(100)")] string goalTypeName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProgressPercentage", DbType="Decimal(5,2)")] System.Nullable<decimal> progressPercentage)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token, goalTypeName, progressPercentage);
			return ((ISingleResult<sp_UpdateGoalProgressResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UpdateRoutineProgress")]
		public int sp_UpdateRoutineProgress([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAssignedRoutineID", DbType="Int")] System.Nullable<int> userAssignedRoutineID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userAssignedRoutineID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UpdateUserProfile")]
		public ISingleResult<sp_UpdateUserProfileResult> sp_UpdateUserProfile([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PhoneNumber", DbType="NVarChar(20)")] string phoneNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address", DbType="NVarChar(255)")] string address)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token, phoneNumber, address);
			return ((ISingleResult<sp_UpdateUserProfileResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_ValidateSession")]
		public ISingleResult<sp_ValidateSessionResult> sp_ValidateSession([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token);
			return ((ISingleResult<sp_ValidateSessionResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_RegisterUser")]
		public ISingleResult<sp_RegisterUserResult> sp_RegisterUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Cedula", DbType="NVarChar(20)")] string cedula, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstName", DbType="NVarChar(100)")] string firstName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastName", DbType="NVarChar(100)")] string lastName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(100)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PasswordHash", DbType="NVarChar(255)")] string passwordHash, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PhoneNumber", DbType="NVarChar(20)")] string phoneNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BirthDate", DbType="Date")] System.Nullable<System.DateTime> birthDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address", DbType="NVarChar(255)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleName", DbType="NVarChar(50)")] string roleName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cedula, firstName, lastName, email, passwordHash, phoneNumber, birthDate, address, roleName);
			return ((ISingleResult<sp_RegisterUserResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UserLogin")]
		public ISingleResult<sp_UserLoginResult> sp_UserLogin([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(100)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PasswordHash", DbType="NVarChar(255)")] string passwordHash)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email, passwordHash);
			return ((ISingleResult<sp_UserLoginResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_RegisterCheckOut")]
		public ISingleResult<sp_RegisterCheckOutResult> sp_RegisterCheckOut([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token);
			return ((ISingleResult<sp_RegisterCheckOutResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetAttendanceStatus")]
		public ISingleResult<sp_GetAttendanceStatusResult> sp_GetAttendanceStatus([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(255)")] string token)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token);
			return ((ISingleResult<sp_GetAttendanceStatusResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Attendance")]
	public partial class Attendance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttendanceID;
		
		private int _UserID;
		
		private System.DateTime _CheckInDateTime;
		
		private System.Nullable<System.DateTime> _CheckOutDateTime;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _UpdatedAt;
		
		private EntityRef<User> _User;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttendanceIDChanging(int value);
    partial void OnAttendanceIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCheckInDateTimeChanging(System.DateTime value);
    partial void OnCheckInDateTimeChanged();
    partial void OnCheckOutDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckOutDateTimeChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public Attendance()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendanceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AttendanceID
		{
			get
			{
				return this._AttendanceID;
			}
			set
			{
				if ((this._AttendanceID != value))
				{
					this.OnAttendanceIDChanging(value);
					this.SendPropertyChanging();
					this._AttendanceID = value;
					this.SendPropertyChanged("AttendanceID");
					this.OnAttendanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckInDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CheckInDateTime
		{
			get
			{
				return this._CheckInDateTime;
			}
			set
			{
				if ((this._CheckInDateTime != value))
				{
					this.OnCheckInDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CheckInDateTime = value;
					this.SendPropertyChanged("CheckInDateTime");
					this.OnCheckInDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckOutDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckOutDateTime
		{
			get
			{
				return this._CheckOutDateTime;
			}
			set
			{
				if ((this._CheckOutDateTime != value))
				{
					this.OnCheckOutDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CheckOutDateTime = value;
					this.SendPropertyChanged("CheckOutDateTime");
					this.OnCheckOutDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Attendance", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Attendances.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Attendances.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BodyMetrics")]
	public partial class BodyMetric : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BodyMetricID;
		
		private int _UserID;
		
		private System.DateTime _MeasurementDate;
		
		private System.Nullable<decimal> _Weight;
		
		private System.Nullable<decimal> _Height;
		
		private System.Nullable<decimal> _BodyFatPercentage;
		
		private System.Nullable<decimal> _BMI;
		
		private System.Nullable<decimal> _WaistCircumference;
		
		private System.Nullable<decimal> _ChestCircumference;
		
		private System.Nullable<decimal> _ArmCircumference;
		
		private System.Nullable<decimal> _LegCircumference;
		
		private string _Notes;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _UpdatedAt;
		
		private EntityRef<User> _User;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBodyMetricIDChanging(int value);
    partial void OnBodyMetricIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnMeasurementDateChanging(System.DateTime value);
    partial void OnMeasurementDateChanged();
    partial void OnWeightChanging(System.Nullable<decimal> value);
    partial void OnWeightChanged();
    partial void OnHeightChanging(System.Nullable<decimal> value);
    partial void OnHeightChanged();
    partial void OnBodyFatPercentageChanging(System.Nullable<decimal> value);
    partial void OnBodyFatPercentageChanged();
    partial void OnBMIChanging(System.Nullable<decimal> value);
    partial void OnBMIChanged();
    partial void OnWaistCircumferenceChanging(System.Nullable<decimal> value);
    partial void OnWaistCircumferenceChanged();
    partial void OnChestCircumferenceChanging(System.Nullable<decimal> value);
    partial void OnChestCircumferenceChanged();
    partial void OnArmCircumferenceChanging(System.Nullable<decimal> value);
    partial void OnArmCircumferenceChanged();
    partial void OnLegCircumferenceChanging(System.Nullable<decimal> value);
    partial void OnLegCircumferenceChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public BodyMetric()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyMetricID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BodyMetricID
		{
			get
			{
				return this._BodyMetricID;
			}
			set
			{
				if ((this._BodyMetricID != value))
				{
					this.OnBodyMetricIDChanging(value);
					this.SendPropertyChanging();
					this._BodyMetricID = value;
					this.SendPropertyChanged("BodyMetricID");
					this.OnBodyMetricIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasurementDate", DbType="Date NOT NULL")]
		public System.DateTime MeasurementDate
		{
			get
			{
				return this._MeasurementDate;
			}
			set
			{
				if ((this._MeasurementDate != value))
				{
					this.OnMeasurementDateChanging(value);
					this.SendPropertyChanging();
					this._MeasurementDate = value;
					this.SendPropertyChanged("MeasurementDate");
					this.OnMeasurementDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyFatPercentage", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> BodyFatPercentage
		{
			get
			{
				return this._BodyFatPercentage;
			}
			set
			{
				if ((this._BodyFatPercentage != value))
				{
					this.OnBodyFatPercentageChanging(value);
					this.SendPropertyChanging();
					this._BodyFatPercentage = value;
					this.SendPropertyChanged("BodyFatPercentage");
					this.OnBodyFatPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BMI", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> BMI
		{
			get
			{
				return this._BMI;
			}
			set
			{
				if ((this._BMI != value))
				{
					this.OnBMIChanging(value);
					this.SendPropertyChanging();
					this._BMI = value;
					this.SendPropertyChanged("BMI");
					this.OnBMIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaistCircumference", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> WaistCircumference
		{
			get
			{
				return this._WaistCircumference;
			}
			set
			{
				if ((this._WaistCircumference != value))
				{
					this.OnWaistCircumferenceChanging(value);
					this.SendPropertyChanging();
					this._WaistCircumference = value;
					this.SendPropertyChanged("WaistCircumference");
					this.OnWaistCircumferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChestCircumference", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> ChestCircumference
		{
			get
			{
				return this._ChestCircumference;
			}
			set
			{
				if ((this._ChestCircumference != value))
				{
					this.OnChestCircumferenceChanging(value);
					this.SendPropertyChanging();
					this._ChestCircumference = value;
					this.SendPropertyChanged("ChestCircumference");
					this.OnChestCircumferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArmCircumference", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> ArmCircumference
		{
			get
			{
				return this._ArmCircumference;
			}
			set
			{
				if ((this._ArmCircumference != value))
				{
					this.OnArmCircumferenceChanging(value);
					this.SendPropertyChanging();
					this._ArmCircumference = value;
					this.SendPropertyChanged("ArmCircumference");
					this.OnArmCircumferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LegCircumference", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> LegCircumference
		{
			get
			{
				return this._LegCircumference;
			}
			set
			{
				if ((this._LegCircumference != value))
				{
					this.OnLegCircumferenceChanging(value);
					this.SendPropertyChanging();
					this._LegCircumference = value;
					this.SendPropertyChanged("LegCircumference");
					this.OnLegCircumferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(255)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BodyMetric", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.BodyMetrics.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.BodyMetrics.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DifficultyLevels")]
	public partial class DifficultyLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DifficultyLevelID;
		
		private string _Name;
		
		private string _Description;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _UpdatedAt;
		
		private EntitySet<Routine> _Routines;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDifficultyLevelIDChanging(int value);
    partial void OnDifficultyLevelIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public DifficultyLevel()
		{
			this._Routines = new EntitySet<Routine>(new Action<Routine>(this.attach_Routines), new Action<Routine>(this.detach_Routines));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DifficultyLevelID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DifficultyLevelID
		{
			get
			{
				return this._DifficultyLevelID;
			}
			set
			{
				if ((this._DifficultyLevelID != value))
				{
					this.OnDifficultyLevelIDChanging(value);
					this.SendPropertyChanging();
					this._DifficultyLevelID = value;
					this.SendPropertyChanged("DifficultyLevelID");
					this.OnDifficultyLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DifficultyLevel_Routine", Storage="_Routines", ThisKey="DifficultyLevelID", OtherKey="DifficultyLevelID")]
		public EntitySet<Routine> Routines
		{
			get
			{
				return this._Routines;
			}
			set
			{
				this._Routines.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Routines(Routine entity)
		{
			this.SendPropertyChanging();
			entity.DifficultyLevel = this;
		}
		
		private void detach_Routines(Routine entity)
		{
			this.SendPropertyChanging();
			entity.DifficultyLevel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExerciseCategories")]
	public partial class ExerciseCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExerciseCategoryID;
		
		private string _Name;
		
		private string _Description;
		
		private string _TargetMuscleGroup;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _UpdatedAt;
		
		private EntitySet<Exercise> _Exercises;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExerciseCategoryIDChanging(int value);
    partial void OnExerciseCategoryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTargetMuscleGroupChanging(string value);
    partial void OnTargetMuscleGroupChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public ExerciseCategory()
		{
			this._Exercises = new EntitySet<Exercise>(new Action<Exercise>(this.attach_Exercises), new Action<Exercise>(this.detach_Exercises));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExerciseCategoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExerciseCategoryID
		{
			get
			{
				return this._ExerciseCategoryID;
			}
			set
			{
				if ((this._ExerciseCategoryID != value))
				{
					this.OnExerciseCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ExerciseCategoryID = value;
					this.SendPropertyChanged("ExerciseCategoryID");
					this.OnExerciseCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetMuscleGroup", DbType="NVarChar(100)")]
		public string TargetMuscleGroup
		{
			get
			{
				return this._TargetMuscleGroup;
			}
			set
			{
				if ((this._TargetMuscleGroup != value))
				{
					this.OnTargetMuscleGroupChanging(value);
					this.SendPropertyChanging();
					this._TargetMuscleGroup = value;
					this.SendPropertyChanged("TargetMuscleGroup");
					this.OnTargetMuscleGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExerciseCategory_Exercise", Storage="_Exercises", ThisKey="ExerciseCategoryID", OtherKey="ExerciseCategoryID")]
		public EntitySet<Exercise> Exercises
		{
			get
			{
				return this._Exercises;
			}
			set
			{
				this._Exercises.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Exercises(Exercise entity)
		{
			this.SendPropertyChanging();
			entity.ExerciseCategory = this;
		}
		
		private void detach_Exercises(Exercise entity)
		{
			this.SendPropertyChanging();
			entity.ExerciseCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Exercises")]
	public partial class Exercise : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExerciseID;
		
		private string _Name;
		
		private string _Description;
		
		private int _ExerciseCategoryID;
		
		private string _Instructions;
		
		private string _VideoURL;
		
		private string _ImageURL;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _UpdatedAt;
		
		private EntitySet<RoutineExercise> _RoutineExercises;
		
		private EntityRef<ExerciseCategory> _ExerciseCategory;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExerciseIDChanging(int value);
    partial void OnExerciseIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnExerciseCategoryIDChanging(int value);
    partial void OnExerciseCategoryIDChanged();
    partial void OnInstructionsChanging(string value);
    partial void OnInstructionsChanged();
    partial void OnVideoURLChanging(string value);
    partial void OnVideoURLChanged();
    partial void OnImageURLChanging(string value);
    partial void OnImageURLChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public Exercise()
		{
			this._RoutineExercises = new EntitySet<RoutineExercise>(new Action<RoutineExercise>(this.attach_RoutineExercises), new Action<RoutineExercise>(this.detach_RoutineExercises));
			this._ExerciseCategory = default(EntityRef<ExerciseCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExerciseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExerciseID
		{
			get
			{
				return this._ExerciseID;
			}
			set
			{
				if ((this._ExerciseID != value))
				{
					this.OnExerciseIDChanging(value);
					this.SendPropertyChanging();
					this._ExerciseID = value;
					this.SendPropertyChanged("ExerciseID");
					this.OnExerciseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExerciseCategoryID", DbType="Int NOT NULL")]
		public int ExerciseCategoryID
		{
			get
			{
				return this._ExerciseCategoryID;
			}
			set
			{
				if ((this._ExerciseCategoryID != value))
				{
					if (this._ExerciseCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExerciseCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ExerciseCategoryID = value;
					this.SendPropertyChanged("ExerciseCategoryID");
					this.OnExerciseCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instructions", DbType="NVarChar(MAX)")]
		public string Instructions
		{
			get
			{
				return this._Instructions;
			}
			set
			{
				if ((this._Instructions != value))
				{
					this.OnInstructionsChanging(value);
					this.SendPropertyChanging();
					this._Instructions = value;
					this.SendPropertyChanged("Instructions");
					this.OnInstructionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoURL", DbType="NVarChar(255)")]
		public string VideoURL
		{
			get
			{
				return this._VideoURL;
			}
			set
			{
				if ((this._VideoURL != value))
				{
					this.OnVideoURLChanging(value);
					this.SendPropertyChanging();
					this._VideoURL = value;
					this.SendPropertyChanged("VideoURL");
					this.OnVideoURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageURL", DbType="NVarChar(255)")]
		public string ImageURL
		{
			get
			{
				return this._ImageURL;
			}
			set
			{
				if ((this._ImageURL != value))
				{
					this.OnImageURLChanging(value);
					this.SendPropertyChanging();
					this._ImageURL = value;
					this.SendPropertyChanged("ImageURL");
					this.OnImageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exercise_RoutineExercise", Storage="_RoutineExercises", ThisKey="ExerciseID", OtherKey="ExerciseID")]
		public EntitySet<RoutineExercise> RoutineExercises
		{
			get
			{
				return this._RoutineExercises;
			}
			set
			{
				this._RoutineExercises.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExerciseCategory_Exercise", Storage="_ExerciseCategory", ThisKey="ExerciseCategoryID", OtherKey="ExerciseCategoryID", IsForeignKey=true)]
		public ExerciseCategory ExerciseCategory
		{
			get
			{
				return this._ExerciseCategory.Entity;
			}
			set
			{
				ExerciseCategory previousValue = this._ExerciseCategory.Entity;
				if (((previousValue != value) 
							|| (this._ExerciseCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExerciseCategory.Entity = null;
						previousValue.Exercises.Remove(this);
					}
					this._ExerciseCategory.Entity = value;
					if ((value != null))
					{
						value.Exercises.Add(this);
						this._ExerciseCategoryID = value.ExerciseCategoryID;
					}
					else
					{
						this._ExerciseCategoryID = default(int);
					}
					this.SendPropertyChanged("ExerciseCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoutineExercises(RoutineExercise entity)
		{
			this.SendPropertyChanging();
			entity.Exercise = this;
		}
		
		private void detach_RoutineExercises(RoutineExercise entity)
		{
			this.SendPropertyChanging();
			entity.Exercise = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GoalTypes")]
	public partial class GoalType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GoalTypeID;
		
		private string _Name;
		
		private string _Description;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _UpdatedAt;
		
		private EntitySet<UserGoal> _UserGoals;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGoalTypeIDChanging(int value);
    partial void OnGoalTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public GoalType()
		{
			this._UserGoals = new EntitySet<UserGoal>(new Action<UserGoal>(this.attach_UserGoals), new Action<UserGoal>(this.detach_UserGoals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoalTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GoalTypeID
		{
			get
			{
				return this._GoalTypeID;
			}
			set
			{
				if ((this._GoalTypeID != value))
				{
					this.OnGoalTypeIDChanging(value);
					this.SendPropertyChanging();
					this._GoalTypeID = value;
					this.SendPropertyChanged("GoalTypeID");
					this.OnGoalTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GoalType_UserGoal", Storage="_UserGoals", ThisKey="GoalTypeID", OtherKey="GoalTypeID")]
		public EntitySet<UserGoal> UserGoals
		{
			get
			{
				return this._UserGoals;
			}
			set
			{
				this._UserGoals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserGoals(UserGoal entity)
		{
			this.SendPropertyChanging();
			entity.GoalType = this;
		}
		
		private void detach_UserGoals(UserGoal entity)
		{
			this.SendPropertyChanging();
			entity.GoalType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MembershipTypes")]
	public partial class MembershipType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MembershipTypeID;
		
		private string _Name;
		
		private string _Description;
		
		private int _DurationDays;
		
		private decimal _Price;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _UpdatedAt;
		
		private EntitySet<UserMembership> _UserMemberships;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMembershipTypeIDChanging(int value);
    partial void OnMembershipTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDurationDaysChanging(int value);
    partial void OnDurationDaysChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public MembershipType()
		{
			this._UserMemberships = new EntitySet<UserMembership>(new Action<UserMembership>(this.attach_UserMemberships), new Action<UserMembership>(this.detach_UserMemberships));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MembershipTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MembershipTypeID
		{
			get
			{
				return this._MembershipTypeID;
			}
			set
			{
				if ((this._MembershipTypeID != value))
				{
					this.OnMembershipTypeIDChanging(value);
					this.SendPropertyChanging();
					this._MembershipTypeID = value;
					this.SendPropertyChanged("MembershipTypeID");
					this.OnMembershipTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DurationDays", DbType="Int NOT NULL")]
		public int DurationDays
		{
			get
			{
				return this._DurationDays;
			}
			set
			{
				if ((this._DurationDays != value))
				{
					this.OnDurationDaysChanging(value);
					this.SendPropertyChanging();
					this._DurationDays = value;
					this.SendPropertyChanged("DurationDays");
					this.OnDurationDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(10,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MembershipType_UserMembership", Storage="_UserMemberships", ThisKey="MembershipTypeID", OtherKey="MembershipTypeID")]
		public EntitySet<UserMembership> UserMemberships
		{
			get
			{
				return this._UserMemberships;
			}
			set
			{
				this._UserMemberships.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserMemberships(UserMembership entity)
		{
			this.SendPropertyChanging();
			entity.MembershipType = this;
		}
		
		private void detach_UserMemberships(UserMembership entity)
		{
			this.SendPropertyChanging();
			entity.MembershipType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Notifications")]
	public partial class Notification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NotificationID;
		
		private int _UserID;
		
		private int _NotificationTypeID;
		
		private string _Title;
		
		private string _Message;
		
		private bool _IsRead;
		
		private System.DateTime _SentAt;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _UpdatedAt;
		
		private EntityRef<NotificationType> _NotificationType;
		
		private EntityRef<User> _User;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNotificationIDChanging(int value);
    partial void OnNotificationIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnNotificationTypeIDChanging(int value);
    partial void OnNotificationTypeIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnIsReadChanging(bool value);
    partial void OnIsReadChanged();
    partial void OnSentAtChanging(System.DateTime value);
    partial void OnSentAtChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public Notification()
		{
			this._NotificationType = default(EntityRef<NotificationType>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NotificationID
		{
			get
			{
				return this._NotificationID;
			}
			set
			{
				if ((this._NotificationID != value))
				{
					this.OnNotificationIDChanging(value);
					this.SendPropertyChanging();
					this._NotificationID = value;
					this.SendPropertyChanged("NotificationID");
					this.OnNotificationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationTypeID", DbType="Int NOT NULL")]
		public int NotificationTypeID
		{
			get
			{
				return this._NotificationTypeID;
			}
			set
			{
				if ((this._NotificationTypeID != value))
				{
					if (this._NotificationType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNotificationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._NotificationTypeID = value;
					this.SendPropertyChanged("NotificationTypeID");
					this.OnNotificationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRead", DbType="Bit NOT NULL")]
		public bool IsRead
		{
			get
			{
				return this._IsRead;
			}
			set
			{
				if ((this._IsRead != value))
				{
					this.OnIsReadChanging(value);
					this.SendPropertyChanging();
					this._IsRead = value;
					this.SendPropertyChanged("IsRead");
					this.OnIsReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentAt", DbType="DateTime NOT NULL")]
		public System.DateTime SentAt
		{
			get
			{
				return this._SentAt;
			}
			set
			{
				if ((this._SentAt != value))
				{
					this.OnSentAtChanging(value);
					this.SendPropertyChanging();
					this._SentAt = value;
					this.SendPropertyChanged("SentAt");
					this.OnSentAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NotificationType_Notification", Storage="_NotificationType", ThisKey="NotificationTypeID", OtherKey="NotificationTypeID", IsForeignKey=true)]
		public NotificationType NotificationType
		{
			get
			{
				return this._NotificationType.Entity;
			}
			set
			{
				NotificationType previousValue = this._NotificationType.Entity;
				if (((previousValue != value) 
							|| (this._NotificationType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NotificationType.Entity = null;
						previousValue.Notifications.Remove(this);
					}
					this._NotificationType.Entity = value;
					if ((value != null))
					{
						value.Notifications.Add(this);
						this._NotificationTypeID = value.NotificationTypeID;
					}
					else
					{
						this._NotificationTypeID = default(int);
					}
					this.SendPropertyChanged("NotificationType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Notification", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Notifications.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Notifications.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NotificationTypes")]
	public partial class NotificationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NotificationTypeID;
		
		private string _Name;
		
		private string _Description;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _UpdatedAt;
		
		private EntitySet<Notification> _Notifications;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNotificationTypeIDChanging(int value);
    partial void OnNotificationTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public NotificationType()
		{
			this._Notifications = new EntitySet<Notification>(new Action<Notification>(this.attach_Notifications), new Action<Notification>(this.detach_Notifications));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NotificationTypeID
		{
			get
			{
				return this._NotificationTypeID;
			}
			set
			{
				if ((this._NotificationTypeID != value))
				{
					this.OnNotificationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._NotificationTypeID = value;
					this.SendPropertyChanged("NotificationTypeID");
					this.OnNotificationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NotificationType_Notification", Storage="_Notifications", ThisKey="NotificationTypeID", OtherKey="NotificationTypeID")]
		public EntitySet<Notification> Notifications
		{
			get
			{
				return this._Notifications;
			}
			set
			{
				this._Notifications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Notifications(Notification entity)
		{
			this.SendPropertyChanging();
			entity.NotificationType = this;
		}
		
		private void detach_Notifications(Notification entity)
		{
			this.SendPropertyChanging();
			entity.NotificationType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentMethods")]
	public partial class PaymentMethod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentMethodID;
		
		private string _Name;
		
		private string _Description;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _UpdatedAt;
		
		private EntitySet<Payment> _Payments;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentMethodIDChanging(int value);
    partial void OnPaymentMethodIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public PaymentMethod()
		{
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethodID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PaymentMethodID
		{
			get
			{
				return this._PaymentMethodID;
			}
			set
			{
				if ((this._PaymentMethodID != value))
				{
					this.OnPaymentMethodIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethodID = value;
					this.SendPropertyChanged("PaymentMethodID");
					this.OnPaymentMethodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentMethod_Payment", Storage="_Payments", ThisKey="PaymentMethodID", OtherKey="PaymentMethodID")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.PaymentMethod = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.PaymentMethod = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payments")]
	public partial class Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentID;
		
		private int _UserID;
		
		private int _UserMembershipID;
		
		private decimal _Amount;
		
		private int _PaymentMethodID;
		
		private System.DateTime _PaymentDate;
		
		private string _ReceiptFilePath;
		
		private string _Status;
		
		private string _Notes;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _UpdatedAt;
		
		private EntityRef<PaymentMethod> _PaymentMethod;
		
		private EntityRef<UserMembership> _UserMembership;
		
		private EntityRef<User> _User;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentIDChanging(int value);
    partial void OnPaymentIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserMembershipIDChanging(int value);
    partial void OnUserMembershipIDChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnPaymentMethodIDChanging(int value);
    partial void OnPaymentMethodIDChanged();
    partial void OnPaymentDateChanging(System.DateTime value);
    partial void OnPaymentDateChanged();
    partial void OnReceiptFilePathChanging(string value);
    partial void OnReceiptFilePathChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public Payment()
		{
			this._PaymentMethod = default(EntityRef<PaymentMethod>);
			this._UserMembership = default(EntityRef<UserMembership>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PaymentID
		{
			get
			{
				return this._PaymentID;
			}
			set
			{
				if ((this._PaymentID != value))
				{
					this.OnPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentID = value;
					this.SendPropertyChanged("PaymentID");
					this.OnPaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserMembershipID", DbType="Int NOT NULL")]
		public int UserMembershipID
		{
			get
			{
				return this._UserMembershipID;
			}
			set
			{
				if ((this._UserMembershipID != value))
				{
					if (this._UserMembership.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserMembershipIDChanging(value);
					this.SendPropertyChanging();
					this._UserMembershipID = value;
					this.SendPropertyChanged("UserMembershipID");
					this.OnUserMembershipIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethodID", DbType="Int NOT NULL")]
		public int PaymentMethodID
		{
			get
			{
				return this._PaymentMethodID;
			}
			set
			{
				if ((this._PaymentMethodID != value))
				{
					if (this._PaymentMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentMethodIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethodID = value;
					this.SendPropertyChanged("PaymentMethodID");
					this.OnPaymentMethodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTime NOT NULL")]
		public System.DateTime PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptFilePath", DbType="NVarChar(255)")]
		public string ReceiptFilePath
		{
			get
			{
				return this._ReceiptFilePath;
			}
			set
			{
				if ((this._ReceiptFilePath != value))
				{
					this.OnReceiptFilePathChanging(value);
					this.SendPropertyChanging();
					this._ReceiptFilePath = value;
					this.SendPropertyChanged("ReceiptFilePath");
					this.OnReceiptFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(255)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentMethod_Payment", Storage="_PaymentMethod", ThisKey="PaymentMethodID", OtherKey="PaymentMethodID", IsForeignKey=true)]
		public PaymentMethod PaymentMethod
		{
			get
			{
				return this._PaymentMethod.Entity;
			}
			set
			{
				PaymentMethod previousValue = this._PaymentMethod.Entity;
				if (((previousValue != value) 
							|| (this._PaymentMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentMethod.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._PaymentMethod.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._PaymentMethodID = value.PaymentMethodID;
					}
					else
					{
						this._PaymentMethodID = default(int);
					}
					this.SendPropertyChanged("PaymentMethod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMembership_Payment", Storage="_UserMembership", ThisKey="UserMembershipID", OtherKey="UserMembershipID", IsForeignKey=true)]
		public UserMembership UserMembership
		{
			get
			{
				return this._UserMembership.Entity;
			}
			set
			{
				UserMembership previousValue = this._UserMembership.Entity;
				if (((previousValue != value) 
							|| (this._UserMembership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserMembership.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._UserMembership.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._UserMembershipID = value.UserMembershipID;
					}
					else
					{
						this._UserMembershipID = default(int);
					}
					this.SendPropertyChanged("UserMembership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Payment", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleID;
		
		private string _RoleName;
		
		private string _Description;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _UpdatedAt;
		
		private EntitySet<User> _Users;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public Role()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User", Storage="_Users", ThisKey="RoleID", OtherKey="RoleID")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoutineDays")]
	public partial class RoutineDay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoutineDayID;
		
		private int _RoutineID;
		
		private int _DayNumber;
		
		private string _Name;
		
		private string _Description;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _UpdatedAt;
		
		private EntitySet<RoutineExercise> _RoutineExercises;
		
		private EntityRef<Routine> _Routine;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoutineDayIDChanging(int value);
    partial void OnRoutineDayIDChanged();
    partial void OnRoutineIDChanging(int value);
    partial void OnRoutineIDChanged();
    partial void OnDayNumberChanging(int value);
    partial void OnDayNumberChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public RoutineDay()
		{
			this._RoutineExercises = new EntitySet<RoutineExercise>(new Action<RoutineExercise>(this.attach_RoutineExercises), new Action<RoutineExercise>(this.detach_RoutineExercises));
			this._Routine = default(EntityRef<Routine>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoutineDayID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoutineDayID
		{
			get
			{
				return this._RoutineDayID;
			}
			set
			{
				if ((this._RoutineDayID != value))
				{
					this.OnRoutineDayIDChanging(value);
					this.SendPropertyChanging();
					this._RoutineDayID = value;
					this.SendPropertyChanged("RoutineDayID");
					this.OnRoutineDayIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoutineID", DbType="Int NOT NULL")]
		public int RoutineID
		{
			get
			{
				return this._RoutineID;
			}
			set
			{
				if ((this._RoutineID != value))
				{
					if (this._Routine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoutineIDChanging(value);
					this.SendPropertyChanging();
					this._RoutineID = value;
					this.SendPropertyChanged("RoutineID");
					this.OnRoutineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayNumber", DbType="Int NOT NULL")]
		public int DayNumber
		{
			get
			{
				return this._DayNumber;
			}
			set
			{
				if ((this._DayNumber != value))
				{
					this.OnDayNumberChanging(value);
					this.SendPropertyChanging();
					this._DayNumber = value;
					this.SendPropertyChanged("DayNumber");
					this.OnDayNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoutineDay_RoutineExercise", Storage="_RoutineExercises", ThisKey="RoutineDayID", OtherKey="RoutineDayID")]
		public EntitySet<RoutineExercise> RoutineExercises
		{
			get
			{
				return this._RoutineExercises;
			}
			set
			{
				this._RoutineExercises.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Routine_RoutineDay", Storage="_Routine", ThisKey="RoutineID", OtherKey="RoutineID", IsForeignKey=true)]
		public Routine Routine
		{
			get
			{
				return this._Routine.Entity;
			}
			set
			{
				Routine previousValue = this._Routine.Entity;
				if (((previousValue != value) 
							|| (this._Routine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Routine.Entity = null;
						previousValue.RoutineDays.Remove(this);
					}
					this._Routine.Entity = value;
					if ((value != null))
					{
						value.RoutineDays.Add(this);
						this._RoutineID = value.RoutineID;
					}
					else
					{
						this._RoutineID = default(int);
					}
					this.SendPropertyChanged("Routine");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoutineExercises(RoutineExercise entity)
		{
			this.SendPropertyChanging();
			entity.RoutineDay = this;
		}
		
		private void detach_RoutineExercises(RoutineExercise entity)
		{
			this.SendPropertyChanging();
			entity.RoutineDay = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoutineExercises")]
	public partial class RoutineExercise : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoutineExerciseID;
		
		private int _RoutineDayID;
		
		private int _ExerciseID;
		
		private int _Sets;
		
		private int _Repetitions;
		
		private int _RestTimeSeconds;
		
		private string _Notes;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _UpdatedAt;
		
		private EntitySet<UserExerciseProgress> _UserExerciseProgresses;
		
		private EntityRef<Exercise> _Exercise;
		
		private EntityRef<RoutineDay> _RoutineDay;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoutineExerciseIDChanging(int value);
    partial void OnRoutineExerciseIDChanged();
    partial void OnRoutineDayIDChanging(int value);
    partial void OnRoutineDayIDChanged();
    partial void OnExerciseIDChanging(int value);
    partial void OnExerciseIDChanged();
    partial void OnSetsChanging(int value);
    partial void OnSetsChanged();
    partial void OnRepetitionsChanging(int value);
    partial void OnRepetitionsChanged();
    partial void OnRestTimeSecondsChanging(int value);
    partial void OnRestTimeSecondsChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public RoutineExercise()
		{
			this._UserExerciseProgresses = new EntitySet<UserExerciseProgress>(new Action<UserExerciseProgress>(this.attach_UserExerciseProgresses), new Action<UserExerciseProgress>(this.detach_UserExerciseProgresses));
			this._Exercise = default(EntityRef<Exercise>);
			this._RoutineDay = default(EntityRef<RoutineDay>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoutineExerciseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoutineExerciseID
		{
			get
			{
				return this._RoutineExerciseID;
			}
			set
			{
				if ((this._RoutineExerciseID != value))
				{
					this.OnRoutineExerciseIDChanging(value);
					this.SendPropertyChanging();
					this._RoutineExerciseID = value;
					this.SendPropertyChanged("RoutineExerciseID");
					this.OnRoutineExerciseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoutineDayID", DbType="Int NOT NULL")]
		public int RoutineDayID
		{
			get
			{
				return this._RoutineDayID;
			}
			set
			{
				if ((this._RoutineDayID != value))
				{
					if (this._RoutineDay.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoutineDayIDChanging(value);
					this.SendPropertyChanging();
					this._RoutineDayID = value;
					this.SendPropertyChanged("RoutineDayID");
					this.OnRoutineDayIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExerciseID", DbType="Int NOT NULL")]
		public int ExerciseID
		{
			get
			{
				return this._ExerciseID;
			}
			set
			{
				if ((this._ExerciseID != value))
				{
					if (this._Exercise.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExerciseIDChanging(value);
					this.SendPropertyChanging();
					this._ExerciseID = value;
					this.SendPropertyChanged("ExerciseID");
					this.OnExerciseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sets", DbType="Int NOT NULL")]
		public int Sets
		{
			get
			{
				return this._Sets;
			}
			set
			{
				if ((this._Sets != value))
				{
					this.OnSetsChanging(value);
					this.SendPropertyChanging();
					this._Sets = value;
					this.SendPropertyChanged("Sets");
					this.OnSetsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Repetitions", DbType="Int NOT NULL")]
		public int Repetitions
		{
			get
			{
				return this._Repetitions;
			}
			set
			{
				if ((this._Repetitions != value))
				{
					this.OnRepetitionsChanging(value);
					this.SendPropertyChanging();
					this._Repetitions = value;
					this.SendPropertyChanged("Repetitions");
					this.OnRepetitionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RestTimeSeconds", DbType="Int NOT NULL")]
		public int RestTimeSeconds
		{
			get
			{
				return this._RestTimeSeconds;
			}
			set
			{
				if ((this._RestTimeSeconds != value))
				{
					this.OnRestTimeSecondsChanging(value);
					this.SendPropertyChanging();
					this._RestTimeSeconds = value;
					this.SendPropertyChanged("RestTimeSeconds");
					this.OnRestTimeSecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(255)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoutineExercise_UserExerciseProgress", Storage="_UserExerciseProgresses", ThisKey="RoutineExerciseID", OtherKey="RoutineExerciseID")]
		public EntitySet<UserExerciseProgress> UserExerciseProgresses
		{
			get
			{
				return this._UserExerciseProgresses;
			}
			set
			{
				this._UserExerciseProgresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exercise_RoutineExercise", Storage="_Exercise", ThisKey="ExerciseID", OtherKey="ExerciseID", IsForeignKey=true)]
		public Exercise Exercise
		{
			get
			{
				return this._Exercise.Entity;
			}
			set
			{
				Exercise previousValue = this._Exercise.Entity;
				if (((previousValue != value) 
							|| (this._Exercise.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exercise.Entity = null;
						previousValue.RoutineExercises.Remove(this);
					}
					this._Exercise.Entity = value;
					if ((value != null))
					{
						value.RoutineExercises.Add(this);
						this._ExerciseID = value.ExerciseID;
					}
					else
					{
						this._ExerciseID = default(int);
					}
					this.SendPropertyChanged("Exercise");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoutineDay_RoutineExercise", Storage="_RoutineDay", ThisKey="RoutineDayID", OtherKey="RoutineDayID", IsForeignKey=true)]
		public RoutineDay RoutineDay
		{
			get
			{
				return this._RoutineDay.Entity;
			}
			set
			{
				RoutineDay previousValue = this._RoutineDay.Entity;
				if (((previousValue != value) 
							|| (this._RoutineDay.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoutineDay.Entity = null;
						previousValue.RoutineExercises.Remove(this);
					}
					this._RoutineDay.Entity = value;
					if ((value != null))
					{
						value.RoutineExercises.Add(this);
						this._RoutineDayID = value.RoutineDayID;
					}
					else
					{
						this._RoutineDayID = default(int);
					}
					this.SendPropertyChanged("RoutineDay");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserExerciseProgresses(UserExerciseProgress entity)
		{
			this.SendPropertyChanging();
			entity.RoutineExercise = this;
		}
		
		private void detach_UserExerciseProgresses(UserExerciseProgress entity)
		{
			this.SendPropertyChanging();
			entity.RoutineExercise = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoutineRatings")]
	public partial class RoutineRating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoutineRatingID;
		
		private int _UserID;
		
		private int _RoutineID;
		
		private int _DifficultyRating;
		
		private int _EffectivenessRating;
		
		private int _EnjoymentRating;
		
		private string _Comments;
		
		private System.DateTime _RatingDate;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _UpdatedAt;
		
		private EntityRef<Routine> _Routine;
		
		private EntityRef<User> _User;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoutineRatingIDChanging(int value);
    partial void OnRoutineRatingIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnRoutineIDChanging(int value);
    partial void OnRoutineIDChanged();
    partial void OnDifficultyRatingChanging(int value);
    partial void OnDifficultyRatingChanged();
    partial void OnEffectivenessRatingChanging(int value);
    partial void OnEffectivenessRatingChanged();
    partial void OnEnjoymentRatingChanging(int value);
    partial void OnEnjoymentRatingChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnRatingDateChanging(System.DateTime value);
    partial void OnRatingDateChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public RoutineRating()
		{
			this._Routine = default(EntityRef<Routine>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoutineRatingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoutineRatingID
		{
			get
			{
				return this._RoutineRatingID;
			}
			set
			{
				if ((this._RoutineRatingID != value))
				{
					this.OnRoutineRatingIDChanging(value);
					this.SendPropertyChanging();
					this._RoutineRatingID = value;
					this.SendPropertyChanged("RoutineRatingID");
					this.OnRoutineRatingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoutineID", DbType="Int NOT NULL")]
		public int RoutineID
		{
			get
			{
				return this._RoutineID;
			}
			set
			{
				if ((this._RoutineID != value))
				{
					if (this._Routine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoutineIDChanging(value);
					this.SendPropertyChanging();
					this._RoutineID = value;
					this.SendPropertyChanged("RoutineID");
					this.OnRoutineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DifficultyRating", DbType="Int NOT NULL")]
		public int DifficultyRating
		{
			get
			{
				return this._DifficultyRating;
			}
			set
			{
				if ((this._DifficultyRating != value))
				{
					this.OnDifficultyRatingChanging(value);
					this.SendPropertyChanging();
					this._DifficultyRating = value;
					this.SendPropertyChanged("DifficultyRating");
					this.OnDifficultyRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectivenessRating", DbType="Int NOT NULL")]
		public int EffectivenessRating
		{
			get
			{
				return this._EffectivenessRating;
			}
			set
			{
				if ((this._EffectivenessRating != value))
				{
					this.OnEffectivenessRatingChanging(value);
					this.SendPropertyChanging();
					this._EffectivenessRating = value;
					this.SendPropertyChanged("EffectivenessRating");
					this.OnEffectivenessRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnjoymentRating", DbType="Int NOT NULL")]
		public int EnjoymentRating
		{
			get
			{
				return this._EnjoymentRating;
			}
			set
			{
				if ((this._EnjoymentRating != value))
				{
					this.OnEnjoymentRatingChanging(value);
					this.SendPropertyChanging();
					this._EnjoymentRating = value;
					this.SendPropertyChanged("EnjoymentRating");
					this.OnEnjoymentRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(255)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingDate", DbType="Date NOT NULL")]
		public System.DateTime RatingDate
		{
			get
			{
				return this._RatingDate;
			}
			set
			{
				if ((this._RatingDate != value))
				{
					this.OnRatingDateChanging(value);
					this.SendPropertyChanging();
					this._RatingDate = value;
					this.SendPropertyChanged("RatingDate");
					this.OnRatingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Routine_RoutineRating", Storage="_Routine", ThisKey="RoutineID", OtherKey="RoutineID", IsForeignKey=true)]
		public Routine Routine
		{
			get
			{
				return this._Routine.Entity;
			}
			set
			{
				Routine previousValue = this._Routine.Entity;
				if (((previousValue != value) 
							|| (this._Routine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Routine.Entity = null;
						previousValue.RoutineRatings.Remove(this);
					}
					this._Routine.Entity = value;
					if ((value != null))
					{
						value.RoutineRatings.Add(this);
						this._RoutineID = value.RoutineID;
					}
					else
					{
						this._RoutineID = default(int);
					}
					this.SendPropertyChanged("Routine");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RoutineRating", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.RoutineRatings.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.RoutineRatings.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Routines")]
	public partial class Routine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoutineID;
		
		private string _Name;
		
		private string _Description;
		
		private int _DifficultyLevelID;
		
		private int _CreatedByUserID;
		
		private int _DurationInDays;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _UpdatedAt;
		
		private EntitySet<RoutineDay> _RoutineDays;
		
		private EntitySet<RoutineRating> _RoutineRatings;
		
		private EntitySet<UserAssignedRoutine> _UserAssignedRoutines;
		
		private EntityRef<DifficultyLevel> _DifficultyLevel;
		
		private EntityRef<User> _User;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoutineIDChanging(int value);
    partial void OnRoutineIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDifficultyLevelIDChanging(int value);
    partial void OnDifficultyLevelIDChanged();
    partial void OnCreatedByUserIDChanging(int value);
    partial void OnCreatedByUserIDChanged();
    partial void OnDurationInDaysChanging(int value);
    partial void OnDurationInDaysChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public Routine()
		{
			this._RoutineDays = new EntitySet<RoutineDay>(new Action<RoutineDay>(this.attach_RoutineDays), new Action<RoutineDay>(this.detach_RoutineDays));
			this._RoutineRatings = new EntitySet<RoutineRating>(new Action<RoutineRating>(this.attach_RoutineRatings), new Action<RoutineRating>(this.detach_RoutineRatings));
			this._UserAssignedRoutines = new EntitySet<UserAssignedRoutine>(new Action<UserAssignedRoutine>(this.attach_UserAssignedRoutines), new Action<UserAssignedRoutine>(this.detach_UserAssignedRoutines));
			this._DifficultyLevel = default(EntityRef<DifficultyLevel>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoutineID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoutineID
		{
			get
			{
				return this._RoutineID;
			}
			set
			{
				if ((this._RoutineID != value))
				{
					this.OnRoutineIDChanging(value);
					this.SendPropertyChanging();
					this._RoutineID = value;
					this.SendPropertyChanged("RoutineID");
					this.OnRoutineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DifficultyLevelID", DbType="Int NOT NULL")]
		public int DifficultyLevelID
		{
			get
			{
				return this._DifficultyLevelID;
			}
			set
			{
				if ((this._DifficultyLevelID != value))
				{
					if (this._DifficultyLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDifficultyLevelIDChanging(value);
					this.SendPropertyChanging();
					this._DifficultyLevelID = value;
					this.SendPropertyChanged("DifficultyLevelID");
					this.OnDifficultyLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int NOT NULL")]
		public int CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DurationInDays", DbType="Int NOT NULL")]
		public int DurationInDays
		{
			get
			{
				return this._DurationInDays;
			}
			set
			{
				if ((this._DurationInDays != value))
				{
					this.OnDurationInDaysChanging(value);
					this.SendPropertyChanging();
					this._DurationInDays = value;
					this.SendPropertyChanged("DurationInDays");
					this.OnDurationInDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Routine_RoutineDay", Storage="_RoutineDays", ThisKey="RoutineID", OtherKey="RoutineID")]
		public EntitySet<RoutineDay> RoutineDays
		{
			get
			{
				return this._RoutineDays;
			}
			set
			{
				this._RoutineDays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Routine_RoutineRating", Storage="_RoutineRatings", ThisKey="RoutineID", OtherKey="RoutineID")]
		public EntitySet<RoutineRating> RoutineRatings
		{
			get
			{
				return this._RoutineRatings;
			}
			set
			{
				this._RoutineRatings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Routine_UserAssignedRoutine", Storage="_UserAssignedRoutines", ThisKey="RoutineID", OtherKey="RoutineID")]
		public EntitySet<UserAssignedRoutine> UserAssignedRoutines
		{
			get
			{
				return this._UserAssignedRoutines;
			}
			set
			{
				this._UserAssignedRoutines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DifficultyLevel_Routine", Storage="_DifficultyLevel", ThisKey="DifficultyLevelID", OtherKey="DifficultyLevelID", IsForeignKey=true)]
		public DifficultyLevel DifficultyLevel
		{
			get
			{
				return this._DifficultyLevel.Entity;
			}
			set
			{
				DifficultyLevel previousValue = this._DifficultyLevel.Entity;
				if (((previousValue != value) 
							|| (this._DifficultyLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DifficultyLevel.Entity = null;
						previousValue.Routines.Remove(this);
					}
					this._DifficultyLevel.Entity = value;
					if ((value != null))
					{
						value.Routines.Add(this);
						this._DifficultyLevelID = value.DifficultyLevelID;
					}
					else
					{
						this._DifficultyLevelID = default(int);
					}
					this.SendPropertyChanged("DifficultyLevel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Routine", Storage="_User", ThisKey="CreatedByUserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Routines.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Routines.Add(this);
						this._CreatedByUserID = value.UserID;
					}
					else
					{
						this._CreatedByUserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoutineDays(RoutineDay entity)
		{
			this.SendPropertyChanging();
			entity.Routine = this;
		}
		
		private void detach_RoutineDays(RoutineDay entity)
		{
			this.SendPropertyChanging();
			entity.Routine = null;
		}
		
		private void attach_RoutineRatings(RoutineRating entity)
		{
			this.SendPropertyChanging();
			entity.Routine = this;
		}
		
		private void detach_RoutineRatings(RoutineRating entity)
		{
			this.SendPropertyChanging();
			entity.Routine = null;
		}
		
		private void attach_UserAssignedRoutines(UserAssignedRoutine entity)
		{
			this.SendPropertyChanging();
			entity.Routine = this;
		}
		
		private void detach_UserAssignedRoutines(UserAssignedRoutine entity)
		{
			this.SendPropertyChanging();
			entity.Routine = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduledMetricMeasurements")]
	public partial class ScheduledMetricMeasurement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ScheduleID;
		
		private int _UserID;
		
		private System.DateTime _ScheduledDate;
		
		private string _Status;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _UpdatedAt;
		
		private EntityRef<User> _User;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScheduleIDChanging(int value);
    partial void OnScheduleIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnScheduledDateChanging(System.DateTime value);
    partial void OnScheduledDateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public ScheduledMetricMeasurement()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ScheduleID
		{
			get
			{
				return this._ScheduleID;
			}
			set
			{
				if ((this._ScheduleID != value))
				{
					this.OnScheduleIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleID = value;
					this.SendPropertyChanged("ScheduleID");
					this.OnScheduleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduledDate", DbType="Date NOT NULL")]
		public System.DateTime ScheduledDate
		{
			get
			{
				return this._ScheduledDate;
			}
			set
			{
				if ((this._ScheduledDate != value))
				{
					this.OnScheduledDateChanging(value);
					this.SendPropertyChanging();
					this._ScheduledDate = value;
					this.SendPropertyChanged("ScheduledDate");
					this.OnScheduledDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ScheduledMetricMeasurement", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ScheduledMetricMeasurements.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ScheduledMetricMeasurements.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sessions")]
	public partial class Session : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SessionID;
		
		private int _UserID;
		
		private string _Token;
		
		private string _Status;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _ExpiresAt;
		
		private System.DateTime _LastActivity;
		
		private EntityRef<User> _User;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSessionIDChanging(int value);
    partial void OnSessionIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnTokenChanging(string value);
    partial void OnTokenChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnExpiresAtChanging(System.DateTime value);
    partial void OnExpiresAtChanged();
    partial void OnLastActivityChanging(System.DateTime value);
    partial void OnLastActivityChanged();
    #endregion
		
		public Session()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SessionID
		{
			get
			{
				return this._SessionID;
			}
			set
			{
				if ((this._SessionID != value))
				{
					this.OnSessionIDChanging(value);
					this.SendPropertyChanging();
					this._SessionID = value;
					this.SendPropertyChanged("SessionID");
					this.OnSessionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiresAt", DbType="DateTime NOT NULL")]
		public System.DateTime ExpiresAt
		{
			get
			{
				return this._ExpiresAt;
			}
			set
			{
				if ((this._ExpiresAt != value))
				{
					this.OnExpiresAtChanging(value);
					this.SendPropertyChanging();
					this._ExpiresAt = value;
					this.SendPropertyChanged("ExpiresAt");
					this.OnExpiresAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivity", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivity
		{
			get
			{
				return this._LastActivity;
			}
			set
			{
				if ((this._LastActivity != value))
				{
					this.OnLastActivityChanging(value);
					this.SendPropertyChanging();
					this._LastActivity = value;
					this.SendPropertyChanged("LastActivity");
					this.OnLastActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Session", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Sessions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Sessions.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserAssignedRoutines")]
	public partial class UserAssignedRoutine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserAssignedRoutineID;
		
		private int _UserID;
		
		private int _RoutineID;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _Status;
		
		private System.Nullable<decimal> _ProgressPercentage;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _UpdatedAt;
		
		private EntitySet<UserExerciseProgress> _UserExerciseProgresses;
		
		private EntityRef<Routine> _Routine;
		
		private EntityRef<User> _User;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserAssignedRoutineIDChanging(int value);
    partial void OnUserAssignedRoutineIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnRoutineIDChanging(int value);
    partial void OnRoutineIDChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnProgressPercentageChanging(System.Nullable<decimal> value);
    partial void OnProgressPercentageChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public UserAssignedRoutine()
		{
			this._UserExerciseProgresses = new EntitySet<UserExerciseProgress>(new Action<UserExerciseProgress>(this.attach_UserExerciseProgresses), new Action<UserExerciseProgress>(this.detach_UserExerciseProgresses));
			this._Routine = default(EntityRef<Routine>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAssignedRoutineID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserAssignedRoutineID
		{
			get
			{
				return this._UserAssignedRoutineID;
			}
			set
			{
				if ((this._UserAssignedRoutineID != value))
				{
					this.OnUserAssignedRoutineIDChanging(value);
					this.SendPropertyChanging();
					this._UserAssignedRoutineID = value;
					this.SendPropertyChanged("UserAssignedRoutineID");
					this.OnUserAssignedRoutineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoutineID", DbType="Int NOT NULL")]
		public int RoutineID
		{
			get
			{
				return this._RoutineID;
			}
			set
			{
				if ((this._RoutineID != value))
				{
					if (this._Routine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoutineIDChanging(value);
					this.SendPropertyChanging();
					this._RoutineID = value;
					this.SendPropertyChanged("RoutineID");
					this.OnRoutineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgressPercentage", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> ProgressPercentage
		{
			get
			{
				return this._ProgressPercentage;
			}
			set
			{
				if ((this._ProgressPercentage != value))
				{
					this.OnProgressPercentageChanging(value);
					this.SendPropertyChanging();
					this._ProgressPercentage = value;
					this.SendPropertyChanged("ProgressPercentage");
					this.OnProgressPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAssignedRoutine_UserExerciseProgress", Storage="_UserExerciseProgresses", ThisKey="UserAssignedRoutineID", OtherKey="UserAssignedRoutineID")]
		public EntitySet<UserExerciseProgress> UserExerciseProgresses
		{
			get
			{
				return this._UserExerciseProgresses;
			}
			set
			{
				this._UserExerciseProgresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Routine_UserAssignedRoutine", Storage="_Routine", ThisKey="RoutineID", OtherKey="RoutineID", IsForeignKey=true)]
		public Routine Routine
		{
			get
			{
				return this._Routine.Entity;
			}
			set
			{
				Routine previousValue = this._Routine.Entity;
				if (((previousValue != value) 
							|| (this._Routine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Routine.Entity = null;
						previousValue.UserAssignedRoutines.Remove(this);
					}
					this._Routine.Entity = value;
					if ((value != null))
					{
						value.UserAssignedRoutines.Add(this);
						this._RoutineID = value.RoutineID;
					}
					else
					{
						this._RoutineID = default(int);
					}
					this.SendPropertyChanged("Routine");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserAssignedRoutine", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserAssignedRoutines.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserAssignedRoutines.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserExerciseProgresses(UserExerciseProgress entity)
		{
			this.SendPropertyChanging();
			entity.UserAssignedRoutine = this;
		}
		
		private void detach_UserExerciseProgresses(UserExerciseProgress entity)
		{
			this.SendPropertyChanging();
			entity.UserAssignedRoutine = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserExerciseProgress")]
	public partial class UserExerciseProgress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserExerciseProgressID;
		
		private int _UserAssignedRoutineID;
		
		private int _RoutineExerciseID;
		
		private System.DateTime _CompletionDate;
		
		private int _CompletedSets;
		
		private int _CompletedRepetitions;
		
		private System.Nullable<decimal> _Weight;
		
		private string _Notes;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _UpdatedAt;
		
		private EntityRef<RoutineExercise> _RoutineExercise;
		
		private EntityRef<UserAssignedRoutine> _UserAssignedRoutine;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserExerciseProgressIDChanging(int value);
    partial void OnUserExerciseProgressIDChanged();
    partial void OnUserAssignedRoutineIDChanging(int value);
    partial void OnUserAssignedRoutineIDChanged();
    partial void OnRoutineExerciseIDChanging(int value);
    partial void OnRoutineExerciseIDChanged();
    partial void OnCompletionDateChanging(System.DateTime value);
    partial void OnCompletionDateChanged();
    partial void OnCompletedSetsChanging(int value);
    partial void OnCompletedSetsChanged();
    partial void OnCompletedRepetitionsChanging(int value);
    partial void OnCompletedRepetitionsChanged();
    partial void OnWeightChanging(System.Nullable<decimal> value);
    partial void OnWeightChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public UserExerciseProgress()
		{
			this._RoutineExercise = default(EntityRef<RoutineExercise>);
			this._UserAssignedRoutine = default(EntityRef<UserAssignedRoutine>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserExerciseProgressID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserExerciseProgressID
		{
			get
			{
				return this._UserExerciseProgressID;
			}
			set
			{
				if ((this._UserExerciseProgressID != value))
				{
					this.OnUserExerciseProgressIDChanging(value);
					this.SendPropertyChanging();
					this._UserExerciseProgressID = value;
					this.SendPropertyChanged("UserExerciseProgressID");
					this.OnUserExerciseProgressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAssignedRoutineID", DbType="Int NOT NULL")]
		public int UserAssignedRoutineID
		{
			get
			{
				return this._UserAssignedRoutineID;
			}
			set
			{
				if ((this._UserAssignedRoutineID != value))
				{
					if (this._UserAssignedRoutine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserAssignedRoutineIDChanging(value);
					this.SendPropertyChanging();
					this._UserAssignedRoutineID = value;
					this.SendPropertyChanged("UserAssignedRoutineID");
					this.OnUserAssignedRoutineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoutineExerciseID", DbType="Int NOT NULL")]
		public int RoutineExerciseID
		{
			get
			{
				return this._RoutineExerciseID;
			}
			set
			{
				if ((this._RoutineExerciseID != value))
				{
					if (this._RoutineExercise.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoutineExerciseIDChanging(value);
					this.SendPropertyChanging();
					this._RoutineExerciseID = value;
					this.SendPropertyChanged("RoutineExerciseID");
					this.OnRoutineExerciseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletionDate", DbType="Date NOT NULL")]
		public System.DateTime CompletionDate
		{
			get
			{
				return this._CompletionDate;
			}
			set
			{
				if ((this._CompletionDate != value))
				{
					this.OnCompletionDateChanging(value);
					this.SendPropertyChanging();
					this._CompletionDate = value;
					this.SendPropertyChanged("CompletionDate");
					this.OnCompletionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletedSets", DbType="Int NOT NULL")]
		public int CompletedSets
		{
			get
			{
				return this._CompletedSets;
			}
			set
			{
				if ((this._CompletedSets != value))
				{
					this.OnCompletedSetsChanging(value);
					this.SendPropertyChanging();
					this._CompletedSets = value;
					this.SendPropertyChanged("CompletedSets");
					this.OnCompletedSetsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletedRepetitions", DbType="Int NOT NULL")]
		public int CompletedRepetitions
		{
			get
			{
				return this._CompletedRepetitions;
			}
			set
			{
				if ((this._CompletedRepetitions != value))
				{
					this.OnCompletedRepetitionsChanging(value);
					this.SendPropertyChanging();
					this._CompletedRepetitions = value;
					this.SendPropertyChanged("CompletedRepetitions");
					this.OnCompletedRepetitionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(255)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoutineExercise_UserExerciseProgress", Storage="_RoutineExercise", ThisKey="RoutineExerciseID", OtherKey="RoutineExerciseID", IsForeignKey=true)]
		public RoutineExercise RoutineExercise
		{
			get
			{
				return this._RoutineExercise.Entity;
			}
			set
			{
				RoutineExercise previousValue = this._RoutineExercise.Entity;
				if (((previousValue != value) 
							|| (this._RoutineExercise.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoutineExercise.Entity = null;
						previousValue.UserExerciseProgresses.Remove(this);
					}
					this._RoutineExercise.Entity = value;
					if ((value != null))
					{
						value.UserExerciseProgresses.Add(this);
						this._RoutineExerciseID = value.RoutineExerciseID;
					}
					else
					{
						this._RoutineExerciseID = default(int);
					}
					this.SendPropertyChanged("RoutineExercise");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAssignedRoutine_UserExerciseProgress", Storage="_UserAssignedRoutine", ThisKey="UserAssignedRoutineID", OtherKey="UserAssignedRoutineID", IsForeignKey=true)]
		public UserAssignedRoutine UserAssignedRoutine
		{
			get
			{
				return this._UserAssignedRoutine.Entity;
			}
			set
			{
				UserAssignedRoutine previousValue = this._UserAssignedRoutine.Entity;
				if (((previousValue != value) 
							|| (this._UserAssignedRoutine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserAssignedRoutine.Entity = null;
						previousValue.UserExerciseProgresses.Remove(this);
					}
					this._UserAssignedRoutine.Entity = value;
					if ((value != null))
					{
						value.UserExerciseProgresses.Add(this);
						this._UserAssignedRoutineID = value.UserAssignedRoutineID;
					}
					else
					{
						this._UserAssignedRoutineID = default(int);
					}
					this.SendPropertyChanged("UserAssignedRoutine");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserGoals")]
	public partial class UserGoal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserGoalID;
		
		private int _UserID;
		
		private int _GoalTypeID;
		
		private System.Nullable<decimal> _TargetValue;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _TargetDate;
		
		private string _Status;
		
		private System.Nullable<decimal> _ProgressPercentage;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _UpdatedAt;
		
		private EntityRef<GoalType> _GoalType;
		
		private EntityRef<User> _User;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserGoalIDChanging(int value);
    partial void OnUserGoalIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnGoalTypeIDChanging(int value);
    partial void OnGoalTypeIDChanged();
    partial void OnTargetValueChanging(System.Nullable<decimal> value);
    partial void OnTargetValueChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnTargetDateChanging(System.DateTime value);
    partial void OnTargetDateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnProgressPercentageChanging(System.Nullable<decimal> value);
    partial void OnProgressPercentageChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public UserGoal()
		{
			this._GoalType = default(EntityRef<GoalType>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserGoalID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserGoalID
		{
			get
			{
				return this._UserGoalID;
			}
			set
			{
				if ((this._UserGoalID != value))
				{
					this.OnUserGoalIDChanging(value);
					this.SendPropertyChanging();
					this._UserGoalID = value;
					this.SendPropertyChanged("UserGoalID");
					this.OnUserGoalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoalTypeID", DbType="Int NOT NULL")]
		public int GoalTypeID
		{
			get
			{
				return this._GoalTypeID;
			}
			set
			{
				if ((this._GoalTypeID != value))
				{
					if (this._GoalType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGoalTypeIDChanging(value);
					this.SendPropertyChanging();
					this._GoalTypeID = value;
					this.SendPropertyChanged("GoalTypeID");
					this.OnGoalTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetValue", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TargetValue
		{
			get
			{
				return this._TargetValue;
			}
			set
			{
				if ((this._TargetValue != value))
				{
					this.OnTargetValueChanging(value);
					this.SendPropertyChanging();
					this._TargetValue = value;
					this.SendPropertyChanged("TargetValue");
					this.OnTargetValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetDate", DbType="Date NOT NULL")]
		public System.DateTime TargetDate
		{
			get
			{
				return this._TargetDate;
			}
			set
			{
				if ((this._TargetDate != value))
				{
					this.OnTargetDateChanging(value);
					this.SendPropertyChanging();
					this._TargetDate = value;
					this.SendPropertyChanged("TargetDate");
					this.OnTargetDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgressPercentage", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> ProgressPercentage
		{
			get
			{
				return this._ProgressPercentage;
			}
			set
			{
				if ((this._ProgressPercentage != value))
				{
					this.OnProgressPercentageChanging(value);
					this.SendPropertyChanging();
					this._ProgressPercentage = value;
					this.SendPropertyChanged("ProgressPercentage");
					this.OnProgressPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GoalType_UserGoal", Storage="_GoalType", ThisKey="GoalTypeID", OtherKey="GoalTypeID", IsForeignKey=true)]
		public GoalType GoalType
		{
			get
			{
				return this._GoalType.Entity;
			}
			set
			{
				GoalType previousValue = this._GoalType.Entity;
				if (((previousValue != value) 
							|| (this._GoalType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GoalType.Entity = null;
						previousValue.UserGoals.Remove(this);
					}
					this._GoalType.Entity = value;
					if ((value != null))
					{
						value.UserGoals.Add(this);
						this._GoalTypeID = value.GoalTypeID;
					}
					else
					{
						this._GoalTypeID = default(int);
					}
					this.SendPropertyChanged("GoalType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserGoal", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserGoals.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserGoals.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserMemberships")]
	public partial class UserMembership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserMembershipID;
		
		private int _UserID;
		
		private int _MembershipTypeID;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private string _Status;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _UpdatedAt;
		
		private EntitySet<Payment> _Payments;
		
		private EntityRef<MembershipType> _MembershipType;
		
		private EntityRef<User> _User;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserMembershipIDChanging(int value);
    partial void OnUserMembershipIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnMembershipTypeIDChanging(int value);
    partial void OnMembershipTypeIDChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public UserMembership()
		{
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._MembershipType = default(EntityRef<MembershipType>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserMembershipID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserMembershipID
		{
			get
			{
				return this._UserMembershipID;
			}
			set
			{
				if ((this._UserMembershipID != value))
				{
					this.OnUserMembershipIDChanging(value);
					this.SendPropertyChanging();
					this._UserMembershipID = value;
					this.SendPropertyChanged("UserMembershipID");
					this.OnUserMembershipIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MembershipTypeID", DbType="Int NOT NULL")]
		public int MembershipTypeID
		{
			get
			{
				return this._MembershipTypeID;
			}
			set
			{
				if ((this._MembershipTypeID != value))
				{
					if (this._MembershipType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMembershipTypeIDChanging(value);
					this.SendPropertyChanging();
					this._MembershipTypeID = value;
					this.SendPropertyChanged("MembershipTypeID");
					this.OnMembershipTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMembership_Payment", Storage="_Payments", ThisKey="UserMembershipID", OtherKey="UserMembershipID")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MembershipType_UserMembership", Storage="_MembershipType", ThisKey="MembershipTypeID", OtherKey="MembershipTypeID", IsForeignKey=true)]
		public MembershipType MembershipType
		{
			get
			{
				return this._MembershipType.Entity;
			}
			set
			{
				MembershipType previousValue = this._MembershipType.Entity;
				if (((previousValue != value) 
							|| (this._MembershipType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MembershipType.Entity = null;
						previousValue.UserMemberships.Remove(this);
					}
					this._MembershipType.Entity = value;
					if ((value != null))
					{
						value.UserMemberships.Add(this);
						this._MembershipTypeID = value.MembershipTypeID;
					}
					else
					{
						this._MembershipTypeID = default(int);
					}
					this.SendPropertyChanged("MembershipType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserMembership", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserMemberships.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserMemberships.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.UserMembership = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.UserMembership = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Cedula;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _PasswordHash;
		
		private string _PhoneNumber;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private string _Address;
		
		private string _Llave;
		
		private int _RoleID;
		
		private string _Status;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _UpdatedAt;
		
		private EntitySet<Attendance> _Attendances;
		
		private EntitySet<BodyMetric> _BodyMetrics;
		
		private EntitySet<Notification> _Notifications;
		
		private EntitySet<Payment> _Payments;
		
		private EntitySet<RoutineRating> _RoutineRatings;
		
		private EntitySet<Routine> _Routines;
		
		private EntitySet<ScheduledMetricMeasurement> _ScheduledMetricMeasurements;
		
		private EntitySet<Session> _Sessions;
		
		private EntitySet<UserAssignedRoutine> _UserAssignedRoutines;
		
		private EntitySet<UserGoal> _UserGoals;
		
		private EntitySet<UserMembership> _UserMemberships;
		
		private EntityRef<Role> _Role;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCedulaChanging(string value);
    partial void OnCedulaChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnLlaveChanging(string value);
    partial void OnLlaveChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.DateTime value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public User()
		{
			this._Attendances = new EntitySet<Attendance>(new Action<Attendance>(this.attach_Attendances), new Action<Attendance>(this.detach_Attendances));
			this._BodyMetrics = new EntitySet<BodyMetric>(new Action<BodyMetric>(this.attach_BodyMetrics), new Action<BodyMetric>(this.detach_BodyMetrics));
			this._Notifications = new EntitySet<Notification>(new Action<Notification>(this.attach_Notifications), new Action<Notification>(this.detach_Notifications));
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._RoutineRatings = new EntitySet<RoutineRating>(new Action<RoutineRating>(this.attach_RoutineRatings), new Action<RoutineRating>(this.detach_RoutineRatings));
			this._Routines = new EntitySet<Routine>(new Action<Routine>(this.attach_Routines), new Action<Routine>(this.detach_Routines));
			this._ScheduledMetricMeasurements = new EntitySet<ScheduledMetricMeasurement>(new Action<ScheduledMetricMeasurement>(this.attach_ScheduledMetricMeasurements), new Action<ScheduledMetricMeasurement>(this.detach_ScheduledMetricMeasurements));
			this._Sessions = new EntitySet<Session>(new Action<Session>(this.attach_Sessions), new Action<Session>(this.detach_Sessions));
			this._UserAssignedRoutines = new EntitySet<UserAssignedRoutine>(new Action<UserAssignedRoutine>(this.attach_UserAssignedRoutines), new Action<UserAssignedRoutine>(this.detach_UserAssignedRoutines));
			this._UserGoals = new EntitySet<UserGoal>(new Action<UserGoal>(this.attach_UserGoals), new Action<UserGoal>(this.detach_UserGoals));
			this._UserMemberships = new EntitySet<UserMembership>(new Action<UserMembership>(this.attach_UserMemberships), new Action<UserMembership>(this.detach_UserMemberships));
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cedula", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Cedula
		{
			get
			{
				return this._Cedula;
			}
			set
			{
				if ((this._Cedula != value))
				{
					this.OnCedulaChanging(value);
					this.SendPropertyChanging();
					this._Cedula = value;
					this.SendPropertyChanged("Cedula");
					this.OnCedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(20)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="Date")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Llave", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Llave
		{
			get
			{
				return this._Llave;
			}
			set
			{
				if ((this._Llave != value))
				{
					this.OnLlaveChanging(value);
					this.SendPropertyChanging();
					this._Llave = value;
					this.SendPropertyChanged("Llave");
					this.OnLlaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Attendance", Storage="_Attendances", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<Attendance> Attendances
		{
			get
			{
				return this._Attendances;
			}
			set
			{
				this._Attendances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BodyMetric", Storage="_BodyMetrics", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<BodyMetric> BodyMetrics
		{
			get
			{
				return this._BodyMetrics;
			}
			set
			{
				this._BodyMetrics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Notification", Storage="_Notifications", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<Notification> Notifications
		{
			get
			{
				return this._Notifications;
			}
			set
			{
				this._Notifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Payment", Storage="_Payments", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RoutineRating", Storage="_RoutineRatings", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<RoutineRating> RoutineRatings
		{
			get
			{
				return this._RoutineRatings;
			}
			set
			{
				this._RoutineRatings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Routine", Storage="_Routines", ThisKey="UserID", OtherKey="CreatedByUserID")]
		public EntitySet<Routine> Routines
		{
			get
			{
				return this._Routines;
			}
			set
			{
				this._Routines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ScheduledMetricMeasurement", Storage="_ScheduledMetricMeasurements", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<ScheduledMetricMeasurement> ScheduledMetricMeasurements
		{
			get
			{
				return this._ScheduledMetricMeasurements;
			}
			set
			{
				this._ScheduledMetricMeasurements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Session", Storage="_Sessions", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<Session> Sessions
		{
			get
			{
				return this._Sessions;
			}
			set
			{
				this._Sessions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserAssignedRoutine", Storage="_UserAssignedRoutines", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<UserAssignedRoutine> UserAssignedRoutines
		{
			get
			{
				return this._UserAssignedRoutines;
			}
			set
			{
				this._UserAssignedRoutines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserGoal", Storage="_UserGoals", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<UserGoal> UserGoals
		{
			get
			{
				return this._UserGoals;
			}
			set
			{
				this._UserGoals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserMembership", Storage="_UserMemberships", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<UserMembership> UserMemberships
		{
			get
			{
				return this._UserMemberships;
			}
			set
			{
				this._UserMemberships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User", Storage="_Role", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Attendances(Attendance entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Attendances(Attendance entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_BodyMetrics(BodyMetric entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_BodyMetrics(BodyMetric entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Notifications(Notification entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Notifications(Notification entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_RoutineRatings(RoutineRating entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_RoutineRatings(RoutineRating entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Routines(Routine entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Routines(Routine entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ScheduledMetricMeasurements(ScheduledMetricMeasurement entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ScheduledMetricMeasurements(ScheduledMetricMeasurement entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Sessions(Session entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Sessions(Session entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserAssignedRoutines(UserAssignedRoutine entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserAssignedRoutines(UserAssignedRoutine entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserGoals(UserGoal entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserGoals(UserGoal entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserMemberships(UserMembership entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserMemberships(UserMembership entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	public partial class sp_RegisterBodyMetricsResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_RegisterBodyMetricsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_AbandonGoalResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_AbandonGoalResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_ApprovePaymentResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_ApprovePaymentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_ChangePasswordResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_ChangePasswordResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_ChangeUserStatusResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_ChangeUserStatusResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_CheckMembershipStatusResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_CheckMembershipStatusResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_CreateUserGoalResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_CreateUserGoalResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_GetActiveMembershipResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_GetActiveMembershipResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_GetActiveRoutinesResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_GetActiveRoutinesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_GetAttendanceHistoryResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_GetAttendanceHistoryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_GetAttendanceReportResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_GetAttendanceReportResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_GetBodyMetricsHistoryResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_GetBodyMetricsHistoryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_GetPaymentHistoryResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_GetPaymentHistoryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_GetPeakHoursResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_GetPeakHoursResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_GetRoutineExercisesResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_GetRoutineExercisesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_GetRoutinesReportResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_GetRoutinesReportResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_GetUnreadNotificationsResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_GetUnreadNotificationsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_GetUserGoalsResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_GetUserGoalsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_GetUserProfileResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_GetUserProfileResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_GetUserProfileByCedulaResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_GetUserProfileByCedulaResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_LogoutResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_LogoutResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(34) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_MarkNotificationAsReadResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_MarkNotificationAsReadResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_RateRoutineResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_RateRoutineResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_RegisterAttendanceResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_RegisterAttendanceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_RegisterBodyMetricsResult1
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_RegisterBodyMetricsResult1()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_RegisterExerciseProgressResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_RegisterExerciseProgressResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_RegisterPaymentResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_RegisterPaymentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_ScheduleMetricMeasurementResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_ScheduleMetricMeasurementResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_SendNotificationResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_SendNotificationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_UpdateGoalProgressResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_UpdateGoalProgressResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_UpdateUserProfileResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_UpdateUserProfileResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_ValidateSessionResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_ValidateSessionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(14) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_RegisterUserResult
	{
		
		private string _Result;
		
		private string _Message;
		
		public sp_RegisterUserResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(44) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_UserLoginResult
	{
		
		private string _Cedula;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _PhoneNumber;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private string _Address;
		
		private string _RoleName;
		
		private string _Status;
		
		private string _Token;
		
		private System.Nullable<System.DateTime> _ExpiresAt;
		
		private string _Result;
		
		private string _Message;
		
		public sp_UserLoginResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cedula", DbType="NVarChar(20)")]
		public string Cedula
		{
			get
			{
				return this._Cedula;
			}
			set
			{
				if ((this._Cedula != value))
				{
					this._Cedula = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(20)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this._PhoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="Date")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(20)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="NVarChar(255)")]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this._Token = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiresAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiresAt
		{
			get
			{
				return this._ExpiresAt;
			}
			set
			{
				if ((this._ExpiresAt != value))
				{
					this._ExpiresAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(10)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(100)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_RegisterCheckOutResult
	{
		
		private string _Result;
		
		private string _Message;
		
		private string _CheckInTime;
		
		private string _CheckOutTime;
		
		private System.Nullable<int> _DurationMinutes;
		
		public sp_RegisterCheckOutResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(10)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(100)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckInTime", DbType="NVarChar(10)")]
		public string CheckInTime
		{
			get
			{
				return this._CheckInTime;
			}
			set
			{
				if ((this._CheckInTime != value))
				{
					this._CheckInTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckOutTime", DbType="NVarChar(10)")]
		public string CheckOutTime
		{
			get
			{
				return this._CheckOutTime;
			}
			set
			{
				if ((this._CheckOutTime != value))
				{
					this._CheckOutTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DurationMinutes", DbType="Int")]
		public System.Nullable<int> DurationMinutes
		{
			get
			{
				return this._DurationMinutes;
			}
			set
			{
				if ((this._DurationMinutes != value))
				{
					this._DurationMinutes = value;
				}
			}
		}
	}
	
	public partial class sp_GetAttendanceStatusResult
	{
		
		private string _Result;
		
		private string _Message;
		
		private string _AttendanceStatus;
		
		private System.Nullable<int> _HasActiveCheckin;
		
		private string _CheckInTime;
		
		private System.Nullable<int> _MinutesElapsed;
		
		private string _ActionAvailable;
		
		public sp_GetAttendanceStatusResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(10)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(100)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendanceStatus", DbType="NVarChar(20)")]
		public string AttendanceStatus
		{
			get
			{
				return this._AttendanceStatus;
			}
			set
			{
				if ((this._AttendanceStatus != value))
				{
					this._AttendanceStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasActiveCheckin", DbType="Int")]
		public System.Nullable<int> HasActiveCheckin
		{
			get
			{
				return this._HasActiveCheckin;
			}
			set
			{
				if ((this._HasActiveCheckin != value))
				{
					this._HasActiveCheckin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckInTime", DbType="NVarChar(10)")]
		public string CheckInTime
		{
			get
			{
				return this._CheckInTime;
			}
			set
			{
				if ((this._CheckInTime != value))
				{
					this._CheckInTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinutesElapsed", DbType="Int")]
		public System.Nullable<int> MinutesElapsed
		{
			get
			{
				return this._MinutesElapsed;
			}
			set
			{
				if ((this._MinutesElapsed != value))
				{
					this._MinutesElapsed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionAvailable", DbType="NVarChar(30)")]
		public string ActionAvailable
		{
			get
			{
				return this._ActionAvailable;
			}
			set
			{
				if ((this._ActionAvailable != value))
				{
					this._ActionAvailable = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
